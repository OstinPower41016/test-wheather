{"version":3,"sources":["store/modal/modalSlice.ts","hooks/redux.ts","api/axios.ts","api/weather.ts","components/Home/Card.tsx","components/Home/Modal.tsx","components/Home/FavoriteCards.tsx","components/Home/Search.tsx","store/mode/modeSlice.tsx","components/Home/ChangeMode.tsx","views/Home/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["initialState","isOpen","searchText","allFavoriteCities","localStorage","getItem","modalSlice","createSlice","name","reducers","setStatusModal","state","setSearchText","action","payload","addFavoriteCity","city","length","setItem","removeFavoriteCity","console","log","citiesArr","split","findToRemoveIndex","findIndex","val","splice","updatedAllFavorite","join","trim","removeItem","actions","useAppSelector","useSelector","instance","axios","create","baseURL","getWheather","a","get","response","data","checkFavoriceCity","Boolean","find","CityNotFound","styled","div","CardElement","props","isAbsolute","ButtonElement","isFavorite","Card","dispatch","useDispatch","React","cityWeather","setCityWeather","statusError","setStatusError","then","res","temp","Math","round","main","feels_like","description","weather","iconURL","icon","pressure","className","cn","src","alt","onClick","setFavoiteCity","noClose","BackDropElement","DialogElement","dialog","Modal","modal","open","Flex","NotFoundFavoriteDate","span","FavoriteCards","favoriteCities","cities","setCities","mode","map","preInstalledCards","preInstalled","InputElement","input","button","SearchElement","Search","inputValue","placeholder","value","onInput","e","target","onInputSearchHandler","disabled","setStatus","LabelElement","label","Switch","ChangeMode","type","Home","App","store","configureStore","reducer","modeSlice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5751fb36.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype IInitialState = {\n  isOpen: boolean;\n  searchText: string;\n  allFavoriteCities: string;\n};\n\nconst initialState: IInitialState = {\n  isOpen: false,\n  searchText: \"\",\n  allFavoriteCities: localStorage.getItem(\"favoriteCities\") || \"\",\n};\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    setStatusModal: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n    setSearchText: (state, action: PayloadAction<{ searchText: string }>) => {\n      state.searchText = action.payload.searchText;\n    },\n    addFavoriteCity: (state, action: PayloadAction<{ city: string }>) => {\n      state.allFavoriteCities = state.allFavoriteCities + \" \" + action.payload.city;\n      if (action.payload.city.length !== 0) {\n        localStorage.setItem(\"favoriteCities\", state.allFavoriteCities);\n      }\n    },\n    removeFavoriteCity: (state, action: PayloadAction<{ city: string }>) => {\n      console.log(action.payload.city);\n      const citiesArr = state.allFavoriteCities.split(\" \");\n      const findToRemoveIndex = citiesArr.findIndex((val) => val === action.payload.city);\n      citiesArr.splice(findToRemoveIndex, 1);\n      const updatedAllFavorite = citiesArr.join(\" \");\n      state.allFavoriteCities = updatedAllFavorite;\n\n      if (updatedAllFavorite.trim().length === 0) {\n        localStorage.removeItem(\"favoriteCities\");\n      } else {\n        localStorage.setItem(\"favoriteCities\", updatedAllFavorite);\n      }\n    },\n  },\n});\n\nexport const { setStatusModal, setSearchText, addFavoriteCity, removeFavoriteCity } =\n  modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport type { RootState } from \"../store\";\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\n});\n\nexport default instance;\n","import axios from \"./axios\";\n\nexport const getWheather = async (searchText: string) => {\n  try {\n    const response = await axios.get(\n      `weather?APPID=b79ccfe94759a38a9dcc9f9c8ef0942c&lang=ru&units=metric&q=${searchText}`,\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillStar, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { useDispatch } from \"react-redux\";\nimport cn from \"classnames\";\n\nimport { getWheather } from \"../../api/weather\";\nimport { setStatusModal, addFavoriteCity, removeFavoriteCity } from \"../../store/modal/modalSlice\";\n\ninterface ICardProps {\n  searchText: string;\n  className?: string;\n  noClose?: boolean;\n}\n\ninterface TCityWeather {\n  name: string;\n  temp: number;\n  feels_like: number;\n  description: string;\n  iconURL: string;\n  pressure: number;\n  isFavorite: boolean;\n}\n\ninterface TButtonElement {\n  isFavorite?: boolean;\n}\n\ninterface TCardElement {\n  isAbsolute?: boolean;\n}\n\nconst checkFavoriceCity = (city: string) => {\n  return Boolean(\n    localStorage\n      .getItem(\"favoriteCities\")\n      ?.trim()\n      .split(\" \")\n      .find((val) => val === city),\n  );\n};\n\nconst Card: React.FunctionComponent<ICardProps> = (props) => {\n  const dispatch = useDispatch();\n  const [cityWeather, setCityWeather] = React.useState<TCityWeather>();\n  const [statusError, setStatusError] = React.useState(false);\n\n  React.useEffect(() => {\n    getWheather(props.searchText).then((res) => {\n      if (!res) {\n        setStatusError(true);\n      } else {\n        setCityWeather({\n          name: res.name,\n          temp: Math.round(res.main.temp),\n          feels_like: Math.round(res.main.feels_like),\n          description: res.weather[0].description,\n          iconURL: `http://openweathermap.org/img/w/${res.weather[0].icon}.png`,\n          pressure: res.main.pressure,\n          isFavorite: checkFavoriceCity(res.name),\n        });\n      }\n    });\n  }, []);\n\n  const setFavoiteCity = (name: string) => {\n    const currentFavoriteCities = localStorage\n      .getItem(\"favoriteCities\")\n      ?.trim()\n      .split(\" \")\n      .find((city) => city === name);\n    if (currentFavoriteCities) {\n      dispatch(removeFavoriteCity({ city: name }));\n      setCityWeather({\n        ...cityWeather!,\n        isFavorite: false,\n      });\n    } else {\n      dispatch(addFavoriteCity({ city: name }));\n      setCityWeather({\n        ...cityWeather!,\n        isFavorite: true,\n      });\n    }\n  };\n\n  const onButtonCloseHanlder = () => dispatch(setStatusModal());\n\n  return (\n    <>\n      {!statusError && (\n        <CardElement\n          className={cn(\"py-3 px-5 rounded\", {\n            [props.className!]: props.className ? props.className : \"\",\n          })}\n          isAbsolute={props.className === \"absolute\"}\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className=\"mr-4\">{cityWeather?.name}</span>\n            <div className=\"flex items-center\">\n              <img className=\"mr-2\" src={cityWeather?.iconURL} alt={cityWeather?.description} />\n              <span className=\"text-xl font-bold\">{cityWeather?.temp} &#8451;</span>\n            </div>\n            <div className=\"flex\">\n              <ButtonElement\n                className=\"mr-2\"\n                isFavorite={cityWeather?.isFavorite}\n                onClick={() => setFavoiteCity(cityWeather?.name!)}\n              >\n                <AiFillStar />\n              </ButtonElement>\n              {!props.noClose ? (\n                <ButtonElement onClick={onButtonCloseHanlder}>\n                  <AiOutlineCloseCircle />\n                </ButtonElement>\n              ) : null}\n            </div>\n          </div>\n          <p>\n            <strong>Ощущается как:</strong> {cityWeather?.feels_like} &#8451;\n          </p>\n          <p>\n            <strong>Атмосферное давление:</strong> {cityWeather?.pressure} мбар\n          </p>\n        </CardElement>\n      )}\n      {statusError && (\n        <CityNotFound className=\"absolute flex px-4 py-3\">\n          <p className=\"mr-4\">По поисковому запросу не было найденно ни одного города</p>\n        </CityNotFound>\n      )}\n    </>\n  );\n};\n\nconst CityNotFound = styled.div`\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%);\n  background: white;\n`;\n\nconst CardElement = styled.div`\n  box-shadow: ${(props: TCardElement) => (props.isAbsolute ? \"0 0 8px 2px black;\" : \"\")};\n  background: linear-gradient(135deg, #19506d, #abd0e2);\n  top: 20%;\n  left: 50%;\n  transform: ${(props: TCardElement) => (props.isAbsolute ? \"translate(-50%)\" : \"\")};\n  color: #0b0b0b;\n`;\n\nconst ButtonElement = styled.div`\n  cursor: pointer;\n  color: ${(props: TButtonElement) => (props.isFavorite ? \"gold\" : \"#3e3e3e\")};\n  transition: 1s;\n`;\n\nexport default Card;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatusModal } from \"../../store/modal/modalSlice\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport Card from \"./Card\";\n\nconst Modal: React.FunctionComponent = () => {\n  const { isOpen, searchText } = useAppSelector((state) => state.modal);\n  const dispatch = useDispatch();\n\n  const closeModalHandler = () => dispatch(setStatusModal());\n\n  return (\n    <>\n      {isOpen && (\n        <DialogElement open className=\"absolute h-screen w-screen \">\n          <div className=\"z-20\">\n            <Card searchText={searchText} className=\"absolute\" />\n          </div>\n          <BackDropElement className=\"w-full h-full z-10\" onClick={closeModalHandler} />\n        </DialogElement>\n      )}\n    </>\n  );\n};\n\nconst BackDropElement = styled.div`\n  background: #ccccccbd;\n`;\nconst DialogElement = styled.dialog`\n  background: transparent;\n  top: 0;\n`;\n\nexport default Modal;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport preInstalled from \"../../pre-installed.json\";\nimport Card from \"./Card\";\nimport { useAppSelector } from \"../../hooks/redux\";\n\nconst FavoriteCards: React.FunctionComponent = () => {\n  const favoriteCities = useAppSelector((state) => state.modal.allFavoriteCities);\n  const [cities, setCities] = React.useState<JSX.Element[]>([]);\n  const mode = useAppSelector((state) => state.mode.mode);\n\n  React.useEffect(() => {\n    const citiesArr = favoriteCities.trim().split(\" \");\n\n    if (citiesArr[0]) {\n      setCities(\n        citiesArr.map((city) => <Card key={city} className=\"static\" searchText={city} noClose />),\n      );\n    }\n  }, [favoriteCities]);\n\n  const preInstalledCards = preInstalled.map((city) => (\n    <Card searchText={city} noClose key={city} />\n  ));\n\n  return (\n    <div className=\"container mx-auto mt-6\">\n      <Flex className=\"flex justify-around flex-wrap\">\n        {mode === \"Предустановленный\" ? (\n          preInstalledCards\n        ) : !!favoriteCities.trim().length ? (\n          cities\n        ) : (\n          <NotFoundFavoriteDate>Избранных нет</NotFoundFavoriteDate>\n        )}\n      </Flex>\n    </div>\n  );\n};\n\nconst Flex = styled.div`\n  & > div {\n    margin-top: 2rem;\n  }\n`;\n\nconst NotFoundFavoriteDate = styled.span`\n  display: block;\n  text-align: center;\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nexport default FavoriteCards;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatusModal, setSearchText } from \"../../store/modal/modalSlice\";\nimport { useAppSelector } from \"../../hooks/redux\";\n\nconst Search: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const inputValue = useAppSelector((state) => state.modal.searchText);\n\n  const onInputSearchHandler = (e: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(setSearchText({ searchText: e.target.value }));\n\n  const toggleButtonStatusHandler = () => dispatch(setStatusModal());\n\n  return (\n    <SearchElement className=\"flex justify-between container mx-auto rounded w-6/12 mt-4\">\n      <InputElement\n        placeholder=\"Введите город...\"\n        className=\"py-2 px-4\"\n        value={inputValue}\n        onInput={(e: React.ChangeEvent<HTMLInputElement>) => onInputSearchHandler(e)}\n      />\n      <ButtonElement\n        className=\"flex items-center py-2 px-4\"\n        onClick={toggleButtonStatusHandler}\n        disabled={inputValue.length <= 2}\n      >\n        <span className=\"mr-4\">Поиск</span>\n        <BiSearchAlt />\n      </ButtonElement>\n    </SearchElement>\n  );\n};\n\nconst InputElement = styled.input`\n  outline: none;\n  background: #e3e3e3;\n  width: 100%;\n  border-radius: 0.25rem 0 0 0.25rem;\n`;\nconst ButtonElement = styled.button`\n  background: #3c3cce;\n  color: white;\n  border-radius: 0 0.25rem 0.25rem 0;\n  transition: 0.3s;\n  &:disabled {\n    background: #b8b6c3;\n    color: black;\n  }\n`;\nconst SearchElement = styled.div`\n  border: 1px solid black;\n`;\n\nexport default Search;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ntype IInitialState = {\n  mode: \"Пользовательский\" | \"Предустановленный\";\n};\n\nconst initialState: IInitialState = {\n  mode: \"Предустановленный\",\n};\n\nconst modalSlice = createSlice({\n  name: \"mode\",\n  initialState,\n  reducers: {\n    setStatus: (state) => {\n      if (state.mode === \"Пользовательский\") {\n        state.mode = \"Предустановленный\";\n      } else {\n        state.mode = \"Пользовательский\";\n      }\n    },\n  },\n});\n\nexport const {setStatus} = modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatus } from \"../../store/mode/modeSlice\";\n\nconst ChangeMode: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const onInputHandler = () => dispatch(setStatus());\n\n  return (\n    <div className=\"container mx-auto flex justify-end mt-4\">\n      <LabelElement>\n        <InputElement type=\"checkbox\" onClick={onInputHandler} />\n        <Switch></Switch>\n      </LabelElement>\n    </div>\n  );\n};\n\nconst LabelElement = styled.label`\n  display: inline-block;\n  height: 28px;\n  line-height: 28px;\n  margin-right: 10px;\n  position: relative;\n  vertical-align: middle;\n  font-size: 14px;\n  user-select: none;\n`;\n\nconst InputElement = styled.input`\n  display: block;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  &:checked + span {\n    background-color: #70c767;\n  }\n  &:checked + span::before {\n    left: 0;\n  }\n  &:checked + span::after {\n    transform: translate3d(148px, 0, 0);\n    color: #4fb743;\n  }\n`;\n\nconst Switch = styled.span`\n  display: inline-block;\n  height: 28px;\n  width: 300px;\n  box-sizing: border-box;\n  position: relative;\n  border-radius: 2px;\n  background: #848484;\n  transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);\n  &::before {\n    content: \"Пользовательский\";\n    display: inline-block;\n    box-sizing: border-box;\n    width: 150px;\n    padding: 0 12px;\n    position: absolute;\n    top: 0;\n    left: 150px;\n    text-transform: uppercase;\n    text-align: center;\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 10px;\n    line-height: 28px;\n  }\n  &::after {\n    content: \"Предустанновленный\";\n    display: inline-block;\n    box-sizing: border-box;\n    width: 150px;\n    border-radius: 1px;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    text-transform: uppercase;\n    text-align: center;\n    background: white;\n    line-height: 26px;\n    font-size: 10px;\n    color: #777;\n    transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1);\n  }\n`;\n\nexport default ChangeMode;\n","import * as React from \"react\";\n\nimport FavoriteCards from \"../../components/Home/FavoriteCards\";\nimport Search from \"../../components/Home/Search\";\nimport ChangeMode from \"../../components/Home/ChangeMode\";\n\ninterface IHomeProps {}\n\nconst Home: React.FunctionComponent<IHomeProps> = (props) => {\n  return (\n    <div>\n      <ChangeMode />\n      <Search />\n      <FavoriteCards />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport Modal from \"./components/Home/Modal\";\n\nimport Home from \"./views/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      <Modal />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport modalSlice from \"./modal/modalSlice\";\nimport modeSlice from \"./mode/modeSlice\"\n\nconst store = configureStore({\n  reducer: {\n    modal: modalSlice,\n    mode: modeSlice\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}