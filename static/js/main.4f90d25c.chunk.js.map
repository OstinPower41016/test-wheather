{"version":3,"sources":["store/modal/modalSlice.ts","hooks/redux.ts","api/axios.ts","api/weather.ts","store/cashed/cashedSlice.tsx","components/Home/Card.tsx","components/Home/Modal.tsx","components/Home/FavoriteCards.tsx","components/Home/Search.tsx","store/mode/modeSlice.tsx","components/Home/RefreshButton.tsx","components/Home/ChangeMode.tsx","views/Home/index.tsx","App.tsx","store/index.ts","index.tsx"],"names":["initialState","isOpen","searchText","allFavoriteCities","localStorage","getItem","modalSlice","createSlice","name","reducers","setStatusModal","state","setSearchText","action","payload","addFavoriteCity","city","length","setItem","removeFavoriteCity","console","log","citiesArr","split","findToRemoveIndex","findIndex","val","splice","updatedAllFavorite","join","trim","removeItem","actions","useAppSelector","useSelector","instance","axios","create","baseURL","getWheather","a","get","response","data","cashedSlice","setCashedCity","dataCity","statusUpdate","refreshCashedData","Object","entries","updateFavorite","isFavorite","checkFavoriceCity","Boolean","find","CityNotFound","styled","div","CardElement","props","isAbsolute","ButtonElement","Card","dispatch","useDispatch","React","statusError","setStatusError","cityData","cashed","then","res","temp","Math","round","main","feels_like","description","weather","iconURL","icon","pressure","className","cn","src","alt","onClick","setFavoiteCity","noClose","BackDropElement","DialogElement","dialog","Modal","modal","open","WrapperCards","Flex","NotFoundFavoriteDate","span","FavoriteCards","favoriteCities","cities","setCities","mode","preInstalledCards","preInstalled","map","InputElement","input","button","SearchElement","Search","inputValue","placeholder","value","onInput","e","target","onInputSearchHandler","disabled","setStatus","Button","RefreshButton","WrapperElement","CustomRefreshButton","LabelElement","label","Switch","ChangeMode","type","Home","App","store","configureStore","reducer","modeSlice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f90d25c.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ntype IInitialState = {\n  isOpen: boolean;\n  searchText: string;\n  allFavoriteCities: string;\n};\n\nconst initialState: IInitialState = {\n  isOpen: false,\n  searchText: \"\",\n  allFavoriteCities: localStorage.getItem(\"favoriteCities\") || \"\",\n};\n\nconst modalSlice = createSlice({\n  name: \"modal\",\n  initialState,\n  reducers: {\n    setStatusModal: (state) => {\n      state.isOpen = !state.isOpen;\n    },\n    setSearchText: (state, action: PayloadAction<{ searchText: string }>) => {\n      state.searchText = action.payload.searchText;\n    },\n    addFavoriteCity: (state, action: PayloadAction<{ city: string }>) => {\n      state.allFavoriteCities = state.allFavoriteCities + \" \" + action.payload.city;\n      if (action.payload.city.length !== 0) {\n        localStorage.setItem(\"favoriteCities\", state.allFavoriteCities);\n      }\n    },\n    removeFavoriteCity: (state, action: PayloadAction<{ city: string }>) => {\n      console.log(action.payload.city);\n      const citiesArr = state.allFavoriteCities.split(\" \");\n      const findToRemoveIndex = citiesArr.findIndex((val) => val === action.payload.city);\n      citiesArr.splice(findToRemoveIndex, 1);\n      const updatedAllFavorite = citiesArr.join(\" \");\n      state.allFavoriteCities = updatedAllFavorite;\n\n      if (updatedAllFavorite.trim().length === 0) {\n        localStorage.removeItem(\"favoriteCities\");\n      } else {\n        localStorage.setItem(\"favoriteCities\", updatedAllFavorite);\n      }\n    },\n  },\n});\n\nexport const { setStatusModal, setSearchText, addFavoriteCity, removeFavoriteCity } =\n  modalSlice.actions;\n\nexport default modalSlice.reducer;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport type { RootState } from \"../store\";\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\n});\n\nexport default instance;\n","import axios from \"./axios\";\n\nexport const getWheather = async (searchText: string) => {\n  try {\n    const response = await axios.get(\n      `weather?APPID=b79ccfe94759a38a9dcc9f9c8ef0942c&lang=ru&units=metric&q=${searchText}`,\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { TCityWeather } from \"../../components/Home/Card\";\n\ninterface ICityWeatherWithCountToUpdate extends TCityWeather {\n  statusUpdate: \"\" | \"start refresh\";\n}\n\ninterface IInitialState {\n  [key: string]: ICityWeatherWithCountToUpdate;\n}\n\nconst initialState: IInitialState = {};\n\nconst cashedSlice = createSlice({\n  name: \"cashed\",\n  initialState,\n  reducers: {\n    setCashedCity: (state, action: PayloadAction<{ city: string; dataCity: TCityWeather }>) => {\n      const { city, dataCity } = action.payload;\n      state[city] = { ...dataCity, statusUpdate: \"\" };\n    },\n\n    refreshCashedData: (state) => {\n      for (const [key] of Object.entries(state)) {\n        state[key].statusUpdate = \"start refresh\";\n      }\n    },\n    updateFavorite: (state, action: PayloadAction<{ city: string; isFavorite: boolean }>) => {\n      state[action.payload.city].isFavorite = action.payload.isFavorite;\n    },\n  },\n});\n\nexport const { setCashedCity, updateFavorite, refreshCashedData } = cashedSlice.actions;\nexport default cashedSlice.reducer;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { AiFillStar, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { useDispatch } from \"react-redux\";\nimport cn from \"classnames\";\n\nimport { getWheather } from \"../../api/weather\";\nimport { setStatusModal, addFavoriteCity, removeFavoriteCity } from \"../../store/modal/modalSlice\";\nimport { setCashedCity, updateFavorite } from \"../../store/cashed/cashedSlice\";\nimport { useAppSelector } from \"../../hooks/redux\";\n\ninterface ICardProps {\n  searchText: string;\n  className?: string;\n  noClose?: boolean;\n}\n\nexport interface TCityWeather {\n  name: string;\n  temp: number;\n  feels_like: number;\n  description: string;\n  iconURL: string;\n  pressure: number;\n  isFavorite: boolean;\n}\n\ninterface TButtonElement {\n  isFavorite?: boolean;\n}\n\ninterface TCardElement {\n  isAbsolute?: boolean;\n}\n\nconst checkFavoriceCity = (city: string) => {\n  return Boolean(\n    localStorage\n      .getItem(\"favoriteCities\")\n      ?.trim()\n      .split(\" \")\n      .find((val) => val === city),\n  );\n};\n\nconst Card: React.FunctionComponent<ICardProps> = (props) => {\n  const dispatch = useDispatch();\n  const [statusError, setStatusError] = React.useState(false);\n  const cityData = useAppSelector((state) => state.cashed);\n\n  React.useEffect(() => {\n    if (cityData[props.searchText] && cityData[props.searchText].statusUpdate === \"\") {\n      return;\n    }\n    getWheather(props.searchText).then((res) => {\n      if (!res) {\n        setStatusError(true);\n      } else {\n        const dataCity = {\n          name: res.name,\n          temp: Math.round(res.main.temp),\n          feels_like: Math.round(res.main.feels_like),\n          description: res.weather[0].description,\n          iconURL: `http://openweathermap.org/img/w/${res.weather[0].icon}.png`,\n          pressure: res.main.pressure,\n          isFavorite: checkFavoriceCity(res.name),\n        };\n        dispatch(setCashedCity({ city: dataCity.name, dataCity }));\n      }\n    });\n  }, [cityData]);\n\n  const setFavoiteCity = (name: string) => {\n    const currentFavoriteCities = localStorage\n      .getItem(\"favoriteCities\")\n      ?.trim()\n      .split(\" \")\n      .find((city) => city === name);\n    if (currentFavoriteCities) {\n      dispatch(removeFavoriteCity({ city: name }));\n      dispatch(updateFavorite({ city: name, isFavorite: false }));\n    } else {\n      dispatch(addFavoriteCity({ city: name }));\n      dispatch(updateFavorite({ city: name, isFavorite: true }));\n    }\n  };\n\n  const onButtonCloseHanlder = () => dispatch(setStatusModal());\n\n  return (\n    <>\n      {!statusError && (\n        <CardElement\n          className={cn(\"py-3 px-5 rounded\", {\n            [props.className!]: props.className ? props.className : \"\",\n          })}\n          isAbsolute={props.className === \"absolute\"}\n        >\n          <div className=\"flex items-center justify-between\">\n            <span className=\"mr-4\">{cityData[props.searchText]?.name}</span>\n            <div className=\"flex items-center\">\n              <img\n                className=\"mr-2\"\n                src={cityData[props.searchText]?.iconURL}\n                alt={cityData[props.searchText]?.description}\n              />\n              <span className=\"text-xl font-bold\">{cityData[props.searchText]?.temp} &#8451;</span>\n            </div>\n            <div className=\"flex\">\n              <ButtonElement\n                className=\"mr-2\"\n                isFavorite={cityData[props.searchText]?.isFavorite}\n                onClick={() => setFavoiteCity(cityData[props.searchText]?.name!)}\n              >\n                <AiFillStar />\n              </ButtonElement>\n              {!props.noClose ? (\n                <ButtonElement onClick={onButtonCloseHanlder}>\n                  <AiOutlineCloseCircle />\n                </ButtonElement>\n              ) : null}\n            </div>\n          </div>\n          <p>\n            <strong>Ощущается как:</strong> {cityData[props.searchText]?.feels_like} &#8451;\n          </p>\n          <p>\n            <strong>Атмосферное давление:</strong> {cityData[props.searchText]?.pressure} мбар\n          </p>\n        </CardElement>\n      )}\n      {statusError && (\n        <CityNotFound className=\"absolute flex px-4 py-3\">\n          <p className=\"mr-4\">По поисковому запросу не было найденно ни одного города</p>\n        </CityNotFound>\n      )}\n    </>\n  );\n};\n\nconst CityNotFound = styled.div`\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%);\n  background: white;\n`;\n\nconst CardElement = styled.div`\n  box-shadow: ${(props: TCardElement) => (props.isAbsolute ? \"0 0 8px 2px black;\" : \"\")};\n  background: linear-gradient(135deg, #19506d, #abd0e2);\n  top: 20%;\n  left: 50%;\n  transform: ${(props: TCardElement) => (props.isAbsolute ? \"translate(-50%)\" : \"\")};\n  color: #0b0b0b;\n  @media (max-width: 600px) {\n    left: 50%;\n    min-width: 300px;\n  }\n`;\n\nconst ButtonElement = styled.div`\n  cursor: pointer;\n  color: ${(props: TButtonElement) => (props.isFavorite ? \"gold\" : \"#3e3e3e\")};\n  transition: 1s;\n`;\n\nexport default Card;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatusModal } from \"../../store/modal/modalSlice\";\nimport { useAppSelector } from \"../../hooks/redux\";\nimport Card from \"./Card\";\n\nconst Modal: React.FunctionComponent = () => {\n  const { isOpen, searchText } = useAppSelector((state) => state.modal);\n  const dispatch = useDispatch();\n\n  const closeModalHandler = () => dispatch(setStatusModal());\n\n  return (\n    <>\n      {isOpen && (\n        <DialogElement open className=\"absolute h-screen w-screen \">\n          <div className=\"z-20\">\n            <Card searchText={searchText} className=\"absolute\" />\n          </div>\n          <BackDropElement className=\"w-full h-full z-10\" onClick={closeModalHandler} />\n        </DialogElement>\n      )}\n    </>\n  );\n};\n\nconst BackDropElement = styled.div`\n  background: #ccccccbd;\n`;\nconst DialogElement = styled.dialog`\n  background: transparent;\n  top: 0;\n`;\n\nexport default Modal;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport preInstalled from \"../../pre-installed.json\";\nimport Card from \"./Card\";\nimport { useAppSelector } from \"../../hooks/redux\";\n\nconst FavoriteCards: React.FunctionComponent = () => {\n  const favoriteCities = useAppSelector((state) => state.modal.allFavoriteCities);\n  const [cities, setCities] = React.useState<JSX.Element[]>([]);\n  const mode = useAppSelector((state) => state.mode.mode);\n\n  const preInstalledCards = React.useMemo(() => {\n    return preInstalled.map((city) => <Card searchText={city} noClose key={city} />);\n  }, [preInstalled]);\n\n  React.useEffect(() => {\n    const citiesArr = favoriteCities.trim().split(\" \");\n\n    if (citiesArr[0]) {\n      setCities(\n        citiesArr.map((city) => <Card key={city} className=\"static\" searchText={city} noClose />),\n      );\n    }\n  }, [favoriteCities]);\n\n  return (\n    <WrapperCards className=\"container mx-auto mt-6\">\n      <Flex className=\"flex justify-around flex-wrap\">\n        {mode === \"Предустановленный\" ? (\n          preInstalledCards\n        ) : !!favoriteCities.trim().length ? (\n          cities\n        ) : (\n          <NotFoundFavoriteDate>Избранных нет</NotFoundFavoriteDate>\n        )}\n      </Flex>\n    </WrapperCards>\n  );\n};\n\nconst WrapperCards = styled.div`\n  @media (max-width: 500px) {\n    margin-top: 0 !important;\n  }\n`;\n\nconst Flex = styled.div`\n  & > div {\n    margin-top: 2rem;\n  }\n`;\n\nconst NotFoundFavoriteDate = styled.span`\n  display: block;\n  text-align: center;\n  width: 100%;\n  margin-top: 1rem;\n`;\n\nexport default FavoriteCards;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { BiSearchAlt } from \"react-icons/bi\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatusModal, setSearchText } from \"../../store/modal/modalSlice\";\nimport { useAppSelector } from \"../../hooks/redux\";\n\nconst Search: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const inputValue = useAppSelector((state) => state.modal.searchText);\n\n  const onInputSearchHandler = (e: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(setSearchText({ searchText: e.target.value }));\n\n  const toggleButtonStatusHandler = () => dispatch(setStatusModal());\n\n  return (\n    <SearchElement className=\"flex justify-between container mx-auto rounded w-6/12 mt-4\">\n      <InputElement\n        placeholder=\"Введите город...\"\n        className=\"py-2 px-4\"\n        value={inputValue}\n        onInput={(e: React.ChangeEvent<HTMLInputElement>) => onInputSearchHandler(e)}\n      />\n      <ButtonElement\n        className=\"flex items-center py-2 px-4\"\n        onClick={toggleButtonStatusHandler}\n        disabled={inputValue.length <= 2}\n      >\n        <span className=\"mr-4\">Поиск</span>\n        <BiSearchAlt />\n      </ButtonElement>\n    </SearchElement>\n  );\n};\n\nconst InputElement = styled.input`\n  outline: none;\n  background: #e3e3e3;\n  width: 100%;\n  border-radius: 0.25rem 0 0 0.25rem;\n  @media (max-width: 400px) {\n    font-size: 12px;\n  }\n`;\nconst ButtonElement = styled.button`\n  background: #3c3cce;\n  color: white;\n  border-radius: 0 0.25rem 0.25rem 0;\n  transition: 0.3s;\n  &:disabled {\n    background: #b8b6c3;\n    color: black;\n  }\n  @media (max-width: 400px) {\n    font-size: 12px;\n  }\n`;\nconst SearchElement = styled.div`\n  border: 1px solid black;\n  @media (max-width: 600px) {\n    width: 90%;\n  }\n`;\n\nexport default Search;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ntype IInitialState = {\n  mode: \"Пользовательский\" | \"Предустановленный\";\n};\n\nconst initialState: IInitialState = {\n  mode: \"Предустановленный\",\n};\n\nconst modalSlice = createSlice({\n  name: \"mode\",\n  initialState,\n  reducers: {\n    setStatus: (state) => {\n      if (state.mode === \"Пользовательский\") {\n        state.mode = \"Предустановленный\";\n      } else {\n        state.mode = \"Пользовательский\";\n      }\n    },\n  },\n});\n\nexport const {setStatus} = modalSlice.actions;\nexport default modalSlice.reducer;\n","import * as React from \"react\";\nimport { IoMdRefresh } from \"react-icons/io\";\nimport cn from \"classnames\";\nimport { useDispatch } from \"react-redux\";\n\nimport { refreshCashedData } from \"../../store/cashed/cashedSlice\";\nimport styled from \"styled-components\";\n\ninterface IRefreshButtonProps {\n  className?: string;\n}\n\nconst RefreshButton: React.FunctionComponent<IRefreshButtonProps> = (props) => {\n  const dispatch = useDispatch();\n\n  const onButtonRefreshHandler = () => {\n    dispatch(refreshCashedData());\n  };\n\n  return (\n    <Button\n      className={cn(\"flex items-center rounded\", { [props.className!]: props.className })}\n      onClick={onButtonRefreshHandler}\n    >\n      <p className=\"mr-2\">Перезагрузить</p>\n      <IoMdRefresh />\n    </Button>\n  );\n};\n\nconst Button = styled.button`\n  border: 1px solid black;\n  padding: 0.5rem 1.5rem;\n  cursor: pointer;\n`;\n\nexport default RefreshButton;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { setStatus } from \"../../store/mode/modeSlice\";\nimport RefreshButton from \"./RefreshButton\";\n\nconst ChangeMode: React.FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const onInputHandler = () => dispatch(setStatus());\n\n  return (\n    <WrapperElement className=\"container mx-auto flex justify-between items-center mt-4\">\n      <CustomRefreshButton className=\"mr-4 \" />\n      <LabelElement>\n        <InputElement type=\"checkbox\" onClick={onInputHandler} />\n        <Switch></Switch>\n      </LabelElement>\n    </WrapperElement>\n  );\n};\n\nconst WrapperElement = styled.div`\n  @media (max-width: 768px) {\n    justify-content: center;\n  }\n  @media (max-width: 450px) {\n    justify-content: center;\n    flex-wrap: wrap;\n  }\n`;\n\nconst CustomRefreshButton = styled(RefreshButton)`\n  @media (max-width: 450px) {\n    margin-top: 0.5rem;\n    order: 2;\n  }\n`;\n\nconst LabelElement = styled.label`\n  display: inline-block;\n  height: 28px;\n  line-height: 28px;\n  margin-right: 10px;\n  position: relative;\n  vertical-align: middle;\n  font-size: 14px;\n  user-select: none;\n  @media (max-width: 450px) {\n    order: 1;\n  }\n`;\n\nconst InputElement = styled.input`\n  display: block;\n  width: 0;\n  height: 0;\n  opacity: 0;\n  &:checked + span {\n    background-color: #70c767;\n  }\n  &:checked + span::before {\n    left: 0;\n  }\n  &:checked + span::after {\n    transform: translate3d(148px, 0, 0);\n    color: #4fb743;\n  }\n`;\n\nconst Switch = styled.span`\n  display: inline-block;\n  height: 28px;\n  width: 300px;\n  box-sizing: border-box;\n  position: relative;\n  border-radius: 2px;\n  background: #848484;\n  transition: background-color 0.3s cubic-bezier(0, 1, 0.5, 1);\n  &::before {\n    content: \"Пользовательский\";\n    display: inline-block;\n    box-sizing: border-box;\n    width: 150px;\n    padding: 0 12px;\n    position: absolute;\n    top: 0;\n    left: 150px;\n    text-transform: uppercase;\n    text-align: center;\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 10px;\n    line-height: 28px;\n  }\n  &::after {\n    content: \"Предустанновленный\";\n    display: inline-block;\n    box-sizing: border-box;\n    width: 150px;\n    border-radius: 1px;\n    position: absolute;\n    top: 1px;\n    left: 1px;\n    text-transform: uppercase;\n    text-align: center;\n    background: white;\n    line-height: 26px;\n    font-size: 10px;\n    color: #777;\n    transition: transform 0.3s cubic-bezier(0, 1, 0.5, 1);\n  }\n`;\n\nexport default ChangeMode;\n","import * as React from \"react\";\n\nimport FavoriteCards from \"../../components/Home/FavoriteCards\";\nimport Search from \"../../components/Home/Search\";\nimport ChangeMode from \"../../components/Home/ChangeMode\";\n\ninterface IHomeProps {}\n\nconst Home: React.FunctionComponent<IHomeProps> = (props) => {\n  return (\n    <div>\n      <ChangeMode />\n      <Search />\n      <FavoriteCards />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport Modal from \"./components/Home/Modal\";\n\nimport Home from \"./views/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      <Modal />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport modalSlice from \"./modal/modalSlice\";\nimport modeSlice from \"./mode/modeSlice\";\nimport cashedSlice from \"./cashed/cashedSlice\";\n\nconst store = configureStore({\n  reducer: {\n    modal: modalSlice,\n    mode: modeSlice,\n    cashed: cashedSlice,\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}